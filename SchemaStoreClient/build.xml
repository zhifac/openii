<?xml version="1.0"?>
<project name="schemastoreclient" default="build" basedir=".">
	
    <!-- DO NOT DELETE - these are required when running ant outside Eclipse.  -->
    <!-- If you need to delete these, contact Jeff Hoyt and he'll figure out a way to work around it. -->
    <!-- This requires fatjar.jar to be in your ant's lib directory -->
    <property name="fjepPath" value="fatjar.jar"/>
    <taskdef name="fatjar.build" classname="net.sf.fjep.anttask.FJBuildTask" classpath="${fjepPath}"/>
    <typedef name="fatjar.manifest" classname="net.sf.fjep.anttask.FJManifestType" classpath="${fjepPath}"/>
    <typedef name="fatjar.exclude" classname="net.sf.fjep.anttask.FJExcludeType" classpath="${fjepPath}"/>
    <typedef name="fatjar.jarsource" classname="net.sf.fjep.anttask.FJJarSourceType" classpath="${fjepPath}"/>
    <typedef name="fatjar.filesource" classname="net.sf.fjep.anttask.FJFileSourceType" classpath="${fjepPath}"/>
	
    <!-- Defines the location of SchemaStore -->
    <property name="SchemaStore" value="../SchemaStore"/>

    <!-- global properties  -->
    <property name="src" value="src" description="location of source code" />
    <property name="build" value="build/classes" description="location to build the files to " />
    <property name="jars" value="lib" description="location of necessary jar files" />
    <path id="jarspath">
        <fileset dir="${jars}">
            <include name="**/*.jar" />
            <include name="${SchemaStore}/SchemaStore.jar" />
        </fileset>
    </path>
    
    <!-- echos the date and time and sets the property to ensure junit is available -->
    <target name="init">
        <tstamp />
        <echo message="Build file: ${DSTAMP}, ${TSTAMP}" />
        <available property="junit.present" classname="junit.framework.Test"/>
    </target>
    
    <!-- If JUnit is not present, gives instructions on how to install it-->
    <target name="junit-present" unless="junit.present" depends="init">
      <echo>To run the unit tests, you must have JUnit in your classpath.  From the JUnit task description:</echo>
      <echo>Note: You must have junit.jar and the class files for the &lt;junit&gt; task in the same classpath. You can do one of:</echo>
      <echo>    Put both junit.jar and the optional tasks jar file in ANT_HOME/lib.</echo>
      <echo>    Do not put either in ANT_HOME/lib, and instead include their locations in your CLASSPATH environment variable.</echo>
      <echo>    Do neither of the above, and instead, specify their locations using a &lt;classpath&gt; element in the build file.</echo>
    </target>
    
    <!-- Runs the unit tests -->
    <target name="test" depends="compile">
        <junit haltonfailure="yes">
            <formatter type="plain" usefile="false" />
            <classpath>
                <pathelement path="${build}" />
                <path path="${SchemaStore}/build/classes"/>
                <path path="${SchemaStore}/WebContent/WEB-INF/db-derby-10.4.1.3-bin/lib/derby.jar"/>
                <path path="lib/"/>
                <path refid="jarspath" />
            </classpath>
            <!-- Pass in the location of the ant file.  This will be used to set up the schemastore db -->
            <sysproperty key="antfile.dir" value="${antfile.dir}"/>
            <sysproperty key="SchemaStoreJar" value="${SchemaStore}/SchemaStore.jar"/>
            <batchtest fork="yes" todir="${build}">
                <fileset dir="${src}">
                    <include name="test/**/*Test.java" />
                </fileset>
            </batchtest>
        </junit>
    </target>

    
    <!-- Compiles the code -->
	<target name="compile" depends="junit-present">
		<ant antfile="${SchemaStore}/build.xml" dir="${SchemaStore}" target="compile"/>
	    <mkdir dir="build/classes"/>
	    <javac srcdir="src" destdir="build/classes" deprecation="on" debug="on" source="1.6" target="1.6">
	    	<classpath>
    	    	<path path="${SchemaStore}/build/classes"/>
       	    	<path path="lib/antlr.jar"/>
       	    	<path path="lib/axis.jar"/>
       	    	<path path="lib/castor-1.2-xml-schema.jar"/>
       	    	<path path="lib/jaxrpc.jar"/>
	    		<path path="lib/jcommon-1.0.5.jar"/>
       	    	<path path="lib/jena.jar"/>
	    		<path path="lib/jfreechart-1.0.2.jar"/>
       	    	<path path="lib/poi-3.5-beta3-20080926.jar"/>
	    		<path path="lib/xercesImpl.jar"/>
            </classpath>
        </javac>
		<copy file="src/porters.xml" todir="build/classes"/>
    </target>

	<!-- Builds the SchemaStoreClient jar -->
    <target name="buildSchemaStoreClient" depends="compile">
        <fatjar.build output="SchemaStoreClient.jar">
            <fatjar.manifest/>
            <fatjar.filesource path="build/classes">
				<fatjar.exclude relpath="org/mitre/schemastore/porters/"/>
				<fatjar.exclude relpath="porters.xml"/>
				<fatjar.exclude relpath="mappingfunctions.xml"/>
            </fatjar.filesource>
            <fatjar.filesource path="${SchemaStore}/build/classes"/>
            <fatjar.jarsource file="lib/activation-1.1.jar" relpath=""/>
            <fatjar.jarsource file="lib/axis.jar" relpath=""/>
            <fatjar.jarsource file="lib/commons-discovery-0.2.jar" relpath=""/>
            <fatjar.jarsource file="lib/jaxrpc.jar" relpath=""/>
            <fatjar.jarsource file="lib/mail-1.4.jar" relpath=""/>
            <fatjar.jarsource file="lib/saaj.jar" relpath=""/>
            <fatjar.jarsource file="lib/wsdl4j-1.5.1.jar" relpath=""/>
            <fatjar.jarsource file="lib/org.apache.commons.logging_1.0.4.v200706111724.jar" relpath=""/>
            <fatjar.jarsource file="${SchemaStore}/WebContent/WEB-INF/db-derby-10.4.1.3-bin/lib/derby.jar" relpath=""/>
            <fatjar.jarsource file="${SchemaStore}/WebContent/WEB-INF/db-derby-10.4.1.3-bin/lib/derbytools.jar" relpath=""/>
            <fatjar.jarsource file="${SchemaStore}/WebContent/WEB-INF/lib/postgresql-8.2-504.jdbc3.jar" relpath=""/>
        </fatjar.build>
    </target>

	<!-- Builds the SchemaStorePorters jar -->
    <target name="buildSchemaStorePorters" depends="compile">
        <fatjar.build output="SchemaStorePorters.jar">
            <fatjar.manifest/>
            <fatjar.filesource path="build/classes">
				<fatjar.exclude relpath="org/mitre/schemastore/client/"/>
				<fatjar.exclude relpath="org/mitre/schemastore/servlet/"/>
            </fatjar.filesource>
            <fatjar.jarsource file="lib/antlr.jar" relpath=""/>
            <fatjar.jarsource file="lib/arq.jar" relpath=""/>
            <fatjar.jarsource file="lib/castor-1.2-xml.jar" relpath=""/>
            <fatjar.jarsource file="lib/castor-1.2-xml-schema.jar" relpath=""/>
            <fatjar.jarsource file="lib/icu4j_3_4.jar" relpath=""/>
    		<fatjar.jarsource file="lib/jcommon-1.0.5.jar" relpath=""/>
            <fatjar.jarsource file="lib/jena.jar" relpath=""/>
    		<fatjar.jarsource file="lib/jfreechart-1.0.2.jar" relpath=""/>
            <fatjar.jarsource file="lib/poi-3.5-beta3-20080926.jar" relpath=""/>
            <fatjar.jarsource file="lib/xercesImpl.jar" relpath=""/>
        </fatjar.build>
    </target>

	<!-- Builds the SchemaStore jars -->
    <target name="build">
    	<antcall target="buildSchemaStoreClient"/>
    	<antcall target="buildSchemaStorePorters"/>
   </target>

	<!-- Cleans up the constructed jar files -->
	<target name="clean">
		<delete dir="${SchemaStore}/build/classes"/>
		<delete dir="build/classes"/>
	    <delete file="SchemaStoreClient.jar"/>
		<delete file="SchemaStorePorters.jar"/>
    </target>

</project>